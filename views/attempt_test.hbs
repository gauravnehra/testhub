<body>
    <div class="container my-container" style="max-width: 90%;">
        <div id="main">

            <div class="row row-border">
                <div class="col col-border">
                    <h1 id="heading">Instructions</h1>
                </div>
            </div>
            <div id="white">


                <div class="row row-border">
                    <div class="col col-border">

                        <pre> 1. You can attempt the test only once. 

 2. Make sure you have a good internet connection. 

 3. If you are taking the exam late in the day, it is recommended that you reboot your
   computer before  beginning to free up memory resources from other programs on your 
   computer.

 4. Never click the “Back” button on the browser. This will take you out of the test and
   prevent TestHub from tracking your selected answers. 

 5. Click the “Submit” button to submit your exam.
  </pre>
                    </div>
                </div>
                <div class="row row-border text-center justify-content-center">
                    <div class="col-2 col-border">
                        <button type="button" onclick="back()" class="btn btn-danger">Back</button>
                    </div>
                    <div class="col-2 col-border">
                        <button type="button" onclick="start()" class="btn btn-success">Start </button>
                    </div>
                </div>
            </div>


            {{!-- WHITE CLOSING --}}
        </div>
        <div class="row row-border" style="height: 2vh;"></div>
    </div>
    </div>
    <footer class="footer mt-auto py-3    ">
        <div class="container" style="width: 100%;">
            <div class="row text-light text-center footer-row align-items-center" style="height: 70px;">
                <div class="col-4 footer-col ">
                    Social Media and updates
                </div>
                <div class="col-4 footer-col">
                    Copyright @ 2020 Testhub.com
                </div>
                <div class="col-4 footer-col">
                    TestHub
                </div>
            </div>
        </div>
    </footer>

    <script>
        let currentQuestion
        let questionIds = []
        {{#each data.test.questions}}
            questionIds.push(`{{this}}`)
        {{/each}}

        function back() {
            window.location = '/candidatedashboard'
        }

        function start() {
            currentQuestion = 0;
            let white = document.getElementById("white")
            let heading = document.getElementById("heading")
            heading.innerText = `{{data.test.name}}`
            
            getQuestion()
        }

        function nextQuestion() {
            if(currentQuestion == questionIds.length - 1) {
                let p = document.createElement("p")
                p.innerText = "End of quesitons"
                document.getElementById("error").classList.add("alert", "alert-danger")
                document.getElementById("error").appendChild(p)
                setTimeout(hideError, 2000)
                return
            }
            let qid = questionIds[currentQuestion]
            let userAnswer
            if(document.getElementById('question').name == 'MCQ') {
                let option = document.getElementsByName('option')
                for(i = 0; i < option.length; i++) {
                    if(option[i].checked) {
                        userAnswer = option[i].value
                    }
                }
            }
            else if(document.getElementById('question').name == 'notMCQ') {
                userAnswer = document.getElementById('subjective-answer').value
            }
            
            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("POST", `/candidate/test/{{data.test._id}}/question/${qid}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        currentQuestion++
                        getQuestion()
                    }
                    else {
                        //document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        console.log("error")
                    }
                }
            }

            xmlHttpRequest.send(JSON.stringify({userResponse: userAnswer}))
        }

        function previousQuestion() {
            if(currentQuestion == 0) {
                let p = document.createElement("p")
                p.innerText = "End of quesitons"
                document.getElementById("error").classList.add("alert", "alert-danger")
                document.getElementById("error").appendChild(p)
                setTimeout(hideError, 2000)
                return
            }
            let qid = questionIds[currentQuestion]
            let userAnswer
            if(document.getElementById('question').name == 'MCQ') {
                let option = document.getElementsByName('option')
                for(i = 0; i < option.length; i++) {
                    if(option[i].checked) {
                        userAnswer = option[i].value
                    }
                }
            }
            else if(document.getElementById('question').name == 'notMCQ') {
                userAnswer = document.getElementById('subjective-answer').value
            }

            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("POST", `/candidate/test/{{data.test._id}}/question/${qid}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        currentQuestion--
                        getQuestion()
                    }
                    else {
                        //document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        console.log("error")
                    }
                }
            }

            xmlHttpRequest.send(JSON.stringify({userResponse: userAnswer}))
        }

        // first save response for current quesiton and then call the submit test request
        function submitTest() {
            let qid = questionIds[currentQuestion]
            let userAnswer
            if(document.getElementById('question').name == 'MCQ') {
                let option = document.getElementsByName('option')
                for(i = 0; i < option.length; i++) {
                    if(option[i].checked) {
                        userAnswer = option[i].value
                    }
                }
            }
            else if(document.getElementById('question').name == 'notMCQ') {
                userAnswer = document.getElementById('subjective-answer').value
            }

            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("POST", `/candidate/test/{{data.test._id}}/question/${qid}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        getQuestion()
                        submitTestRequest()
                    }
                    else {
                        //document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        console.log("error")
                    }
                }
            }

            xmlHttpRequest.send(JSON.stringify({userResponse: userAnswer}))
        }

        function submitTestRequest() {
            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("POST", `/candidate/test/{{data.test._id}}/submit`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        alert("Test Submitted")
                        window.location = "/candidatedashboard"
                    }
                    else {
                        //document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        console.log("error")
                    }
                }
            }

            xmlHttpRequest.send()
        }

        function getQuestion() {
            let qid = questionIds[currentQuestion]
            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("GET", `/candidate/test/{{data.test._id}}/question/${qid}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        let qType = JSON.parse(this.responseText).type
                        if(qType == 'MCQ') {
                            createMcqDiv()
                            document.getElementById('question').innerText = `${currentQuestion + 1}. ` + JSON.parse(this.responseText).question
                            document.getElementById('question').name = "MCQ"
                            document.getElementById('optionA').innerText = JSON.parse(this.responseText).optionA
                            document.getElementById('optionB').innerText = JSON.parse(this.responseText).optionB
                            document.getElementById('optionC').innerText = JSON.parse(this.responseText).optionC
                            document.getElementById('optionD').innerText = JSON.parse(this.responseText).optionD
                            let userResponse = ''
                            userResponse = JSON.parse(this.responseText).userResponse
                            if(userResponse == 'A') {
                                document.getElementById('A').checked = true
                            }
                            else if(userResponse == 'B') {
                                document.getElementById('B').checked = true
                            }   
                            else if(userResponse == 'C') {
                                document.getElementById('C').checked = true
                            }
                            else if(userResponse == 'D') {
                                document.getElementById('D').checked = true
                            }
                            else if(userResponse == '') {
                                document.getElementById('A').checked = false
                                document.getElementById('B').checked = false
                                document.getElementById('C').checked = false
                                document.getElementById('D').checked = false
                            }
                        }
                        else if(qType == 'notMCQ') {
                            createSubjectiveDiv()
                            document.getElementById('question').innerText = JSON.parse(this.responseText).question
                            document.getElementById('question').name = "notMCQ"
                            let userResponse = ''
                            userResponse = JSON.parse(this.responseText).userResponse
                            if(userResponse == undefined) {
                                document.getElementById('subjective-answer').innerText = ''
                            }
                            else {
                                document.getElementById('subjective-answer').innerText = userResponse
                            }
                        }

                        
                    }
                    else {
                        //document.getElementById("error").innerText = JSON.parse(this.responseText).msg
                        console.log("error")
                    }
                }
            }

            xmlHttpRequest.send()
        }

        function hideError() {
            let div = document.getElementById("error")
            if (div.childNodes[0]) {
                div.classList.remove("alert", "alert-danger")
                div.innerHTML = ''
            }
        }

        function createMcqDiv() {
            white.innerHTML = `<div class="row row-border">
                    <div class="col-8 col-border">
                        <div id="error"></div>
                        <p id="question"></p>
                    </div>
                </div>
                <div class="row row-border" style="margin-top: 2vh;">
                    <div class="col-8 col-border">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="option" id="A" value="A">
                            <p id="optionA">Option A</p>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="option" id="B" value="B">
                            <p id="optionB">Option B</p>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="option" id="C" value="C">
                            <p id="optionC">Option C</p>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="option" id="D" value="D">
                            <p id="optionD">Option D</p>
                        </div>
                    </div>
                    </div>
                    <div class="row row-border" style="margin-top: 2vh;">
                    <div class="col-2 col-border">
                           <button type="button" onclick="previousQuestion()" class="btn btn-danger">Prev</button>
                    </div>
                    <div class="col-2 col-border">
                           <button type="button" onclick="nextQuestion()" class="btn btn-danger">Next</button>
                    </div>
                    <div class="col-2 col-border">
                           <button type="button" onclick="submitTest()" class="btn btn-success">Submit</button>
                    </div>
                    </div>
                </div>
                <div class="row row-border" style="height: 2vh;"></div>
            `
        }
        function createSubjectiveDiv() {
            white.innerHTML = `<div class="row row-border">
                    <div class="col-8 col-border">
                        <div id="error"></div>
                        <p id="question"></p>
                    </div>
                </div>
                <div class="row row-border" style="margin-top: 2vh;">
                    <div class="col-8 col-border">
                        <div class="form-check">
                            <textarea id="subjective-answer" rows="7" cols="70">
                            </textarea>
                        </div>
                    </div>
                    </div>
                    <div class="row row-border" style="margin-top: 2vh;">
                    <div class="col-2 col-border">
                           <button type="button" onclick="previousQuestion()" class="btn btn-danger">Prev</button>
                    </div>
                    <div class="col-2 col-border">
                           <button type="button" onclick="nextQuestion()" class="btn btn-danger">Next</button>
                    </div>
                    <div class="col-2 col-border">
                           <button type="button" onclick="submitTest()" class="btn btn-success">Submit</button>
                    </div>
                    </div>
                </div>
                <div class="row row-border" style="height: 2vh;"></div>
            `
        }
    </script>
</body>