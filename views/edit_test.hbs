<body>
    <div class="container my-container" style="max-width: 90%;">
        <div id="error"></div>
        <div class="row row-border test" style="margin-top: 10px;">
            <div class="col-2 col-border">
                Test Name:
            </div>
            <div class="col-2 col-border">
                {{!-- Test name using HBS--}}
              <input id="testName" type="text" value="  {{data.editTest.testName}}" oninput="hideError()">
            </div>
        </div>
        <div class="row row-border test">
            <div class="col-2 col-border">
                Test Duration:
            </div>
            <div class="col-2 col-border">
                {{!-- Test Duration using HBS --}}
                <input type="text" id="testDuration" value="{{data.editTest.testDuration}}" oninput="hideError()">
            </div>
        </div>

             <div class="row row-border" style="margin-top: 5px;">
            <div class="col-2 col-border ">
                <button  class="btn btn-dark" type="button" onclick="updateInfo()">Update Info</button>

            </div>
            <div class="col-2  col-border ">
                <button  class="btn btn-dark" type="button" onclick="addQuestion()" >Add Question</button>

            </div> 
             </div>

               <div class="row row-border test" style="margin-top: 20px;">
            <div class="col-2 col-border">
                Questions
            </div>
            
        </div>

        <div class="row row-border edit-row">
            

            <div id="recent-test" class="col question col-border">
                {{#each data.editTest.questions}}

                <div class="row row-border my-row  align-items-center">
                    <div class="col-6 col-border">
                     <p>{{this.question}}</p>   
                      
                    </div>

                    <div class="col-2 col-border">
                     
                            {{this.type}}
                     
                    </div>


                    <div class="col-2 col-border">
                        <a href="#" id="{{this._id}}/{{this.question}}/{{this.type}}/{{this.optionA}}/{{this.optionB}}/{{this.optionC}}/{{this.optionD}}/{{this.correct}}/{{this.score}}" onclick="editQuestion(this)">
                            Edit
                        </a>
                    </div>

                    <div class="col-2 col-border">
                        <a href="#" id="{{this._id}}" onclick="deleteQuestion(this)">
                            Delete
                        </a>
                    </div>

                   
                </div>
                {{/each}}

                <div></div>

            </div>
        </div>

    </div>

    <script>
        function hideError() {
            let div = document.getElementById("error")
            if(div.childNodes[0]) {
                div.classList.remove("alert", "alert-danger")
                div.removeChild(div.childNodes[0])
            }
        }

         let testName=`{{data.editTest.testName}}`
            document.cookie = "testName=" +testName

            console.log(document.cookie)

        function addQuestion(){
           

            window.location= `/addquestion/{{data.editTest.testId}}`
        }

        function updateInfo(){
            let name = document.getElementById("testName").value;
            let duration = document.getElementById("testDuration").value;
            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("PUT", `/company/test/{{data.editTest.testId}}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.send(JSON.stringify({ testName: name, testDuration: duration }))
            
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        let p = document.createElement("p")
                        p.innerText = JSON.parse(this.responseText).msg
                        document.getElementById("error").classList.add("alert", "alert-success")
                        document.getElementById("error").appendChild(p)

                        location.reload()
                    }    
                    else {
                        let p = document.createElement("p")
                        p.innerText = JSON.parse(this.responseText).msg
                        document.getElementById("error").classList.add("alert", "alert-danger")
                        document.getElementById("error").appendChild(p)
                    }
                }
            }
            
            
        }

        function deleteQuestion(element) {
            console.log(element.id)
            var xmlHttpRequest = new XMLHttpRequest()
            xmlHttpRequest.open("DELETE", `/company/test/{{data.editTest.testId}}/question/${element.id}`, true)
            xmlHttpRequest.setRequestHeader("Content-Type", "application/json")
            xmlHttpRequest.setRequestHeader("authorization", getCookie("authorization"));
            xmlHttpRequest.onreadystatechange = function () {
                if (this.readyState === 4) {
                    if (this.status === 200) {
                        location.reload()
                    }
                    else {
                        let p = document.createElement("p")
                        p.innerText = JSON.parse(this.responseText).msg
                        document.getElementById("error").classList.add("alert", "alert-danger")
                        document.getElementById("error").appendChild(p)
                    }
                }
            }
            xmlHttpRequest.send()
        }

        function editQuestion(element) {
            element.href = `/editquestion/{{data.editTest.testId}}/` + element.id 
            console.log(link)
        }

    </script>

</body>